# Default values for kube-audit-rest.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: ""
nameOverride: ""
image:
  repository: ghcr.io/richardoc/kube-audit-rest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7c6b957ec970acc705d95a1fac72ea7a15bef9c4-alpine"

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

deployment:
  extraArgs: []
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  restartPolicy: Always
  terminationGracePeriodSeconds: 30

# TLS configuration for the webhook server
tls:
  # available modes: default, manual (TODO: cert-mgr)
  mode: default
  # if manual enter the base64 encoded tls cert here
  manual:
    tls.key: "REPLACE"
    tls.crt: "REPLACE"
    ca.crt: "REPLACE"

# Configure the commands/scripts run in pre & post install hooks
#   - In default mode, a pre-install hook will generate a tls cert on the fly.
#   - In manual mode, no pre-install hook will be run.
#
# main purpose of post install hook is to do a CA injection in webhook
# configuration & do a rollout restart
hooks:
  preInstallArgs: echo "pre hook" && bash ./scripts/pre-install-entrypoint.sh
  postInstallArgs: echo "post hook" && bash ./scripts/post-install-ca-injector.sh

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 255999
  runAsGroup: 255999
  fsGroup: 255999

securityContext:
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

resources:
  limits:
    cpu: "1"
    memory: 32Mi
  requests:
    cpu: 2m
    memory: 10Mi

replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 75
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
